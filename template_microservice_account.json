{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "micro-service-account-openshift",
    "annotations": {
      "description": "A micro services account on openshift",
      "tags": "microservices",
      "iconClass": "icon-jboss"
    }
  },
  "labels": {
    "application": "reddahaccountms",
      "createdBy": "template-ms-account-reddah",
    "template": "spring-boot-account-api"
  },
   "parameters": [
      {
         "description": "The name for the api account demo.",
         "name": "APPLICATION_NAME",
         "value": "reddahaccountms"
      },
      {
         "description": "Custom hostname for service routes.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
         "name": "APPLICATION_HOSTNAME"
      },
      {
         "description": "Git source URI for application",
         "name": "GIT_URI",
         "value": "https://github.com/Reddah-Cherara/exemple-spring-rest.git"
      },
      {
         "description": "Git branch/tag reference",
         "name": "GIT_REF",
         "value": "master"
      },
      {
         "description": "Maven mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci.apps.10.2.2.2.xip.io/content/groups/public/)",
         "name": "MAVEN_MIRROR_URL",
         "displayName": "Maven mirror url",
         "required": false
      },
      {
         "description": "Github trigger secret",
         "name": "GITHUB_TRIGGER_SECRET",
         "from": "[a-zA-Z0-9]{8}",
         "generate": "expression"
      },
      {
         "description": "Generic build trigger secret",
         "name": "GENERIC_TRIGGER_SECRET",
         "from": "[a-zA-Z0-9]{8}",
         "generate": "expression"
      }
   ],  
  "objects": [
      {
         "kind": "BuildConfig",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}"
         },
         "spec": {
            "triggers": [
               {
                  "type": "Generic",
                  "generic": {
                     "secret": "${GENERIC_TRIGGER_SECRET}"
                  }
               },
               {
                  "type": "GitHub",
                  "github": {
                     "secret": "${GITHUB_TRIGGER_SECRET}"
                  }
               },
               {
                  "type": "ImageChange",
                  "imageChange": {}
               }
            ],
            "source": {
               "type": "Git",
               "git": {
                  "uri": "${GIT_URI}",
                  "ref": "${GIT_REF}"
               }
            },
            "strategy": {
               "type": "Source",
               "sourceStrategy": {
                  "from": {
                     "kind": "ImageStreamTag",
                     "namespace": "openshift",
                     "name": "wildfly:latest"
                  },
                  "env": [
                     {
                        "name": "MAVEN_MIRROR_URL",
                        "value": "${MAVEN_MIRROR_URL}"
                     }
                  ]
               }
            },
            "output": {
               "to": {
                  "kind": "ImageStreamTag",
                  "name": "${APPLICATION_NAME}:latest"
               }
            }
         }
    },
    {
         "kind": "ImageStream",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}"
         },
         "spec": {
            "dockerImageRepository": "",
            "tags": [
               {
                  "name": "latest"
               }
            ]
         }
    },
    {
         "kind": "Route",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}",
            "annotations": {
               "description": "Route for application's http service"
            }
         },
         "spec": {
            "host": "${APPLICATION_HOSTNAME}",
            "to": {
               "kind": "Service",
               "name": "${APPLICATION_NAME}"
            }
         }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${APPLICATION_NAME}",
          "deploymentConfig": "${APPLICATION_NAME}"
        }
      }
    }
   ]
}
